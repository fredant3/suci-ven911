# Generated by Django 5.1.1 on 2025-04-07 06:17

import django.core.validators
import django.db.models.deletion
import helpers.validForm
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Articulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=6, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_by', models.CharField(max_length=6, verbose_name='Actualizado por')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('deleted_by', models.CharField(blank=True, max_length=6, null=True, verbose_name='Eliminado por')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado el')),
                ('nombre', models.TextField(max_length=150, validators=[django.core.validators.MaxLengthValidator(150), helpers.validForm.TextValidator()], verbose_name='Nombre')),
                ('descripcion', models.TextField(max_length=255, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(255), helpers.validForm.TextValidator()], verbose_name='Descripción')),
                ('marca', models.CharField(blank=True, max_length=120, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(120), helpers.validForm.TextValidator()], verbose_name='Marca')),
                ('modelo', models.CharField(blank=True, max_length=120, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(120), helpers.validForm.TextValidator()], verbose_name='Modelo')),
                ('serial', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(30), helpers.validForm.TextValidator()], verbose_name='Serial')),
                ('placa', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(10), helpers.validForm.TextValidator()], verbose_name='Placa')),
                ('cantidad_combustible', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), helpers.validForm.PositiveIntegerValidator()], verbose_name='Cantidad de combustible máx. (En litros)')),
                ('codigo_bn', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(30), helpers.validForm.TextValidator()], verbose_name='Código BN')),
                ('cantidad', models.IntegerField(help_text='La cantidad debe ser un número entero positivo.', validators=[django.core.validators.MinValueValidator(1), helpers.validForm.PositiveIntegerValidator()], verbose_name='Cantidad')),
                ('condicion', models.CharField(blank=True, choices=[('N', 'Nuevo'), ('U', 'Usado'), ('D', 'Deteriorado'), ('-', 'No Aplica')], default='-', max_length=1, null=True, verbose_name='Condición')),
                ('fecha_adq', models.DateField(verbose_name='Fecha de adquisición')),
                ('asignado', models.CharField(choices=[('si', 'Si'), ('no', 'No')], default='no', max_length=8)),
            ],
            options={
                'verbose_name': 'Actividad social',
                'verbose_name_plural': 'Actividades sociales',
                'db_table': 'administracion_articulos',
                'ordering': ['-fecha_adq'],
                'permissions': [('listar_articulo', 'Puede listar articulos'), ('agregar_articulo', 'Puede agregar articulo'), ('ver_articulo', 'Puede ver articulo'), ('editar_articulo', 'Puede actualizar articulo'), ('eliminar_articulo', 'Puede eliminar articulo')],
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=6, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_by', models.CharField(max_length=6, verbose_name='Actualizado por')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('deleted_by', models.CharField(blank=True, max_length=6, null=True, verbose_name='Eliminado por')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado el')),
                ('nombre', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(30), helpers.validForm.UnicodeAlphaSpaceValidator()], verbose_name='Departamento')),
            ],
            options={
                'permissions': [('listar_departamento', 'Puede listar departamentos'), ('agregar_departamento', 'Puede agregar departamentos'), ('ver_departamento', 'Puede ver detalles de departamentos'), ('editar_departamento', 'Puede editar departamentos'), ('eliminar_departamento', 'Puede eliminar departamentos')],
            },
        ),
        migrations.CreateModel(
            name='Sede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=6, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_by', models.CharField(max_length=6, verbose_name='Actualizado por')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('deleted_by', models.CharField(blank=True, max_length=6, null=True, verbose_name='Eliminado por')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado el')),
                ('sede', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(30), helpers.validForm.TextValidator()], verbose_name='Sede')),
                ('estatus', models.CharField(choices=[('act', 'Activo'), ('rem', 'En remodelación'), ('cer', 'Cerrado')], max_length=3, verbose_name='Estatus')),
            ],
            options={
                'verbose_name': 'sede',
                'verbose_name_plural': 'sedes',
                'permissions': [('listar_sede', 'Puede listar sedes'), ('agregar_sede', 'Puede agregar sede'), ('ver_sede', 'Puede ver sede'), ('editar_sede', 'Puede actualizar sede'), ('eliminar_sede', 'Puede eliminar sede')],
            },
        ),
        migrations.CreateModel(
            name='TipoArticulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=6, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_by', models.CharField(max_length=6, verbose_name='Actualizado por')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('deleted_by', models.CharField(blank=True, max_length=6, null=True, verbose_name='Eliminado por')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado el')),
                ('nombre', models.CharField(max_length=180)),
            ],
            options={
                'verbose_name': 'Tipo de Articulo',
                'verbose_name_plural': 'Tipos de Articulos',
                'db_table': 'administracion_tipos_articulos',
                'ordering': ['-id'],
                'permissions': [('listar_tipo_articulo', 'Puede listar tipos de articulos'), ('agregar_tipo_articulo', 'Puede agregar tipo de articulo'), ('ver_tipo_articulo', 'Puede ver tipo de articulo'), ('editar_tipo_articulo', 'Puede actualizar tipo de articulo'), ('eliminar_tipo_articulo', 'Puede eliminar tipo de articulo')],
            },
        ),
        migrations.CreateModel(
            name='TipoAveria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=6, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_by', models.CharField(max_length=6, verbose_name='Actualizado por')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('deleted_by', models.CharField(blank=True, max_length=6, null=True, verbose_name='Eliminado por')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado el')),
                ('nombre', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(200), helpers.validForm.TextValidator()])),
            ],
            options={
                'permissions': [('listar_tipo_averia', 'Puede listar tipos de averías'), ('agregar_tipo_averia', 'Puede agregar tipo de avería'), ('ver_tipo_averia', 'Puede ver tipo de avería'), ('editar_tipo_averia', 'Puede editar tipo de avería'), ('eliminar_tipo_averia', 'Puede eliminar tipo de avería')],
            },
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=6, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_by', models.CharField(max_length=6, verbose_name='Actualizado por')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('deleted_by', models.CharField(blank=True, max_length=6, null=True, verbose_name='Eliminado por')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado el')),
                ('n_orden', models.TextField(validators=[django.core.validators.MinLengthValidator(1)], verbose_name='N° de orden')),
                ('valor_bs', models.TextField(validators=[helpers.validForm.CurrencyValidator()], verbose_name='Valor en BS')),
                ('articulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administracion.articulo', verbose_name='Artículo')),
            ],
            options={
                'permissions': [('listar_compra', 'Puede listar compras'), ('agregar_compra', 'Puede registrar compras'), ('ver_compra', 'Puede ver detalles de compras'), ('editar_compra', 'Puede editar compras'), ('eliminar_compra', 'Puede eliminar compras')],
            },
        ),
        migrations.CreateModel(
            name='Asignacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=6, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_by', models.CharField(max_length=6, verbose_name='Actualizado por')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('deleted_by', models.CharField(blank=True, max_length=6, null=True, verbose_name='Eliminado por')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado el')),
                ('cantidad', models.IntegerField(help_text='La cantidad debe ser un número entero mayor o igual a 1.', validators=[django.core.validators.MinValueValidator(1), helpers.validForm.PositiveIntegerValidator()])),
                ('descripcion', models.TextField(max_length=255, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(255), helpers.validForm.TextValidator()])),
                ('observaciones', models.TextField(max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255), helpers.validForm.TextValidator()])),
                ('articulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administracion.articulo')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administracion.departamento')),
                ('sede', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administracion.sede')),
            ],
            options={
                'verbose_name': 'Asignacion',
                'verbose_name_plural': 'Asignaciones',
                'db_table': 'administracion_asignacion',
                'ordering': ['-id'],
                'permissions': [('listar_asignacion', 'Puede listar asignaciones'), ('agregar_asignacion', 'Puede agregar asignacion'), ('ver_asignacion', 'Puede ver asignacion'), ('editar_asignacion', 'Puede actualizar asignacion'), ('eliminar_asignacion', 'Puede eliminar asignacion')],
            },
        ),
        migrations.AddField(
            model_name='articulo',
            name='tipo_articulo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administracion.tipoarticulo'),
        ),
        migrations.CreateModel(
            name='Averia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=6, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_by', models.CharField(max_length=6, verbose_name='Actualizado por')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('deleted_by', models.CharField(blank=True, max_length=6, null=True, verbose_name='Eliminado por')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado el')),
                ('problema', models.TextField(max_length=180, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(180), helpers.validForm.TextValidator()], verbose_name='Problema')),
                ('ubicacion', models.TextField(max_length=180, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(180), helpers.validForm.TextValidator()], verbose_name='Ubicación')),
                ('serial', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(30), helpers.validForm.TextValidator()], verbose_name='Serial')),
                ('codigo_bn', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(30), helpers.validForm.TextValidator()], verbose_name='Código BN')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administracion.departamento', verbose_name='Departamento')),
                ('tipo_averia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administracion.tipoaveria', verbose_name='Tipo de avería')),
            ],
            options={
                'permissions': [('listar_averia', 'Puede listar averías'), ('agregar_averia', 'Puede agregar avería'), ('ver_averia', 'Puede ver avería'), ('editar_averia', 'Puede editar avería'), ('eliminar_averia', 'Puede eliminar avería')],
            },
        ),
    ]
